spring.application.name=order-service
## SERVER PORT
server.port=9998
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.value.default.type= com.vetahut.events.PaymentStatusEvent
### **Timeouts and Batch Settings**
spring.kafka.consumer.max-poll-records=10
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.fetch-max-wait=500
### CONNECTION
#spring.datasource.url=jdbc:mysql://mysqldb:3306/veta_db?useSSL=false&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true
## Username and password
##spring.datasource.username = ${SPRING_DATASOURCE_USERNAME:root}
##spring.datasource.password = ${SPRING_DATASOURCE_PASSWORD:veta@123}
##spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
##spring.datasource.url=jdbc:mysql://mysqldb:3336/veta_db
#spring.datasource.username=root
#spring.datasource.password=dmV0YUAxMjM=
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#
#
### CONNECTION POOL
## HikariCP Connection Pool Settings
##Time in milliseconds before a connection is tested and kept alive (default is disabled)
#spring.datasource.hikari.keepalive-time=300000
## Minimum number of idle connections in the pool
#spring.datasource.hikari.minimum-idle=5
## Maximum number of connections in the pool
#spring.datasource.hikari.maximum-pool-size=20
## Maximum idle time for connections (in milliseconds)
#spring.datasource.hikari.idle-timeout=600000
## Maximum lifetime of a connection (in milliseconds)
#spring.datasource.hikari.max-lifetime=1800000
## Maximum wait time to get a connection from the pool (in milliseconds)
#spring.datasource.hikari.connection-timeout=20000
#spring.datasource.hikari.pool-name=MyHikariPool  # Custom pool name
#spring.datasource.hikari.auto-commit=true
#
#
## Keep the connection alive if idle for a long time (needed in production), if false mysql shuts down after 8 hours
#spring.datasource.testWhileIdle = true
#
## Validation Query (MySQL)
#spring.datasource.hikari.validation-query=SELECT 1
#
### JPA HIBERNATE
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#spring.jpa.properties.hibernate.hbm2ddl.auto=none
#spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.use_sql_comments=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.type=trace
#
## Hibernate ddl auto (create, create-drop, update): with "update" the database
## schema will be automatically updated accordingly to java entities found in
## the project
#spring.jpa.hibernate.ddl-auto = none
## Naming strategy for columns and table -works in background during hibernate/jpql query exection process
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#
### LOGGING
#logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
#logging.level.com.zaxxer.hikari=TRACE
#
### Specify the location of the master changelog file
#spring.liquibase.change-log=classpath:db/changelog/db.changelog.sql
#spring.liquibase.enabled=true
#
#management.endpoints.web.exposure.include=*
#management.endpoint.health.show-details=always
#management.metrics.export.prometheus.enabled=true
#management.endpoints.web.base-path=/actuator

